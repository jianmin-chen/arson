burn x = 1  # Variable
for i through (0, 10) {
    burn x = x + 1  # No prefix notation currently
}

burn time = True
fire(time)  # => True

prepmatch countdown(num) {
    # This is a function. Function declarations start with "prep match".
    while num > 0 {
        fire(num)  # fire = "print" in every other language ever
        burn num = num - 2
    }
}

lightmatch countdown(x)  # Countdown back to 0

burn coords = [43.55, 42.55, "hi"]
fire(coords)

# Basic power function
prepmatch power(num, exp) {
    burn res = 1
    for i through (0, exp) {
        burn res = res * num
    }
    return res
}

burn y = lightmatch power(8, 3)
fire(y)

prepmatch min(a, b) {
    if (a == b or a < b) {
        return a
    } else {
        return b
    }
}

burn test = lightmatch min(2, 3)
fire(test)

burn coords = [43.55, 42.55]
fire(coords[1])
fire(coords[length])

for i through (0, coords[length]) {
    fire("index", i)
}

coords[push](2 * 3)
fire(coords)
coords[push](y)
fire(coords)
coords[push](min)
fire(coords)
coords[push]([1, 2])
# fire(coords[5][0]) THIS DOESN'T WORK!

coords[update](1, [1, 2])
fire("Updated: ", coords)
